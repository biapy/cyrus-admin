<?php

namespace Biapy\CyrusBundle\Entity;

use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Core\User\UserProviderInterface;
use Symfony\Component\Security\Core\Exception\UsernameNotFoundException;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository implements UserProviderInterface
{
	public function loadUserByUsername($username)
	{
		//input analysis
		$exploded = explode('@', $username);
		if(sizeof($exploded) != 2) return null;
		
		//Doctrine query
		$query = $this	->createQueryBuilder('u')
						->select('u')->from('Biapy\CyrusBundle\Entity\User', 'q')
						->innerJoin('u.domain', 'd')
						->where('u.username = :username AND d.name = :domain')
						->setParameter('username', $exploded[0])
						->setParameter('domain', $exploded[1])
						->getQuery();
		$users = $query->getResult();
		
		//If less than 1 obtained, user doesn't exist.
		if(sizeof($users) != 1) return null;
		
		return $users[0];
		
	}
	
	public function refreshUser(UserInterface $user)
	{
		$class = get_class($user);
		if (!$this->supportsClass($class)) {
			throw new UnsupportedUserException(
					sprintf(
							'Instances of "%s" are not supported.',
							$class
					)
			);
		}
	
		return $this->find($user->getId());
	}
	
	public function supportsClass($class)
	{
		return $this->getEntityName() === $class
		|| is_subclass_of($class, $this->getEntityName());
	}
}
