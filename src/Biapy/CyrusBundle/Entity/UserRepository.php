<?php

namespace Biapy\CyrusBundle\Entity;

use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Core\User\UserProviderInterface;
use Symfony\Component\Security\Core\Exception\UsernameNotFoundException;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository implements UserProviderInterface
{
	public function loadUserByUsername($username)
	{
		//input analysis
		$exploded = explode('@', $username);
		if(sizeof($exploded) != 2) return null;

		//Doctrine query
		return $this->createQueryBuilder('u')
					->innerJoin('u.domain', 'd')
    				->where('u.username = :username')
    				->andWhere('d.name = :domain')
    				->andWhere('u.enabled = :enabled')
    				->setParameter('username', $exploded[0])
    				->setParameter('domain', $exploded[1])
                    ->setParameter('enabled', '1')
					->setMaxResults(1)
					->getQuery()
					->getOneOrNullResult();
	}

	public function refreshUser(UserInterface $user)
	{
		$class = get_class($user);
		if (!$this->supportsClass($class))
		{
			throw new UnsupportedUserException(
					sprintf(
							'Instances of "%s" are not supported.',
							$class
					)
			);
		}

		return $this->find($user->getId());
	}

	public function supportsClass($class)
	{
		return $this->getEntityName() === $class
		|| is_subclass_of($class, $this->getEntityName());
	}
}
